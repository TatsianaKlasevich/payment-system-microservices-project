/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.math.BigDecimal;

import org.threeten.bp.OffsetDateTime;

/**
 * TransactionResponseDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T09:07:33.070383+03:00[Europe/Minsk]")
public class TransactionResponseDTO {
    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    public static final String SERIALIZED_NAME_BANK_CODE = "bankCode";
    public static final String SERIALIZED_NAME_CREAT_AT = "creatAt";
    public static final String SERIALIZED_NAME_EMAIL = "email";
    public static final String SERIALIZED_NAME_PURPOSE_OF_PAYMENT = "purposeOfPayment";
    public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
    public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transactionType";
    public static final String SERIALIZED_NAME_UNP = "unp";
    public static final String SERIALIZED_NAME_UPDATE_AT = "updateAt";
    public static final String SERIALIZED_NAME_USER_ID = "userId";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private BigDecimal amount;
    @SerializedName(SERIALIZED_NAME_BANK_CODE)
    private String bankCode;
    @SerializedName(SERIALIZED_NAME_CREAT_AT)
    private OffsetDateTime creatAt;
    @SerializedName(SERIALIZED_NAME_EMAIL)
    private String email;
    @SerializedName(SERIALIZED_NAME_PURPOSE_OF_PAYMENT)
    private String purposeOfPayment;
    @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
    private Long transactionId;
    @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
    private TransactionTypeEnum transactionType;
    @SerializedName(SERIALIZED_NAME_UNP)
    private Long unp;
    @SerializedName(SERIALIZED_NAME_UPDATE_AT)
    private OffsetDateTime updateAt;
    @SerializedName(SERIALIZED_NAME_USER_ID)
    private Long userId;

    public TransactionResponseDTO amount(BigDecimal amount) {

        this.amount = amount;
        return this;
    }

    /**
     * Get amount
     *
     * @return amount
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public TransactionResponseDTO bankCode(String bankCode) {

        this.bankCode = bankCode;
        return this;
    }

    /**
     * Get bankCode
     *
     * @return bankCode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getBankCode() {
        return bankCode;
    }

    public void setBankCode(String bankCode) {
        this.bankCode = bankCode;
    }

    public TransactionResponseDTO creatAt(OffsetDateTime creatAt) {

        this.creatAt = creatAt;
        return this;
    }

    /**
     * Get creatAt
     *
     * @return creatAt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public OffsetDateTime getCreatAt() {
        return creatAt;
    }

    public void setCreatAt(OffsetDateTime creatAt) {
        this.creatAt = creatAt;
    }

    public TransactionResponseDTO email(String email) {

        this.email = email;
        return this;
    }

    /**
     * Get email
     *
     * @return email
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public TransactionResponseDTO purposeOfPayment(String purposeOfPayment) {

        this.purposeOfPayment = purposeOfPayment;
        return this;
    }

    /**
     * Get purposeOfPayment
     *
     * @return purposeOfPayment
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getPurposeOfPayment() {
        return purposeOfPayment;
    }

    public void setPurposeOfPayment(String purposeOfPayment) {
        this.purposeOfPayment = purposeOfPayment;
    }

    public TransactionResponseDTO transactionId(Long transactionId) {

        this.transactionId = transactionId;
        return this;
    }

    /**
     * Get transactionId
     *
     * @return transactionId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getTransactionId() {
        return transactionId;
    }

    public void setTransactionId(Long transactionId) {
        this.transactionId = transactionId;
    }

    public TransactionResponseDTO transactionType(TransactionTypeEnum transactionType) {

        this.transactionType = transactionType;
        return this;
    }

    /**
     * Get transactionType
     *
     * @return transactionType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public TransactionTypeEnum getTransactionType() {
        return transactionType;
    }

    public void setTransactionType(TransactionTypeEnum transactionType) {
        this.transactionType = transactionType;
    }

    public TransactionResponseDTO unp(Long unp) {

        this.unp = unp;
        return this;
    }

    /**
     * Get unp
     *
     * @return unp
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getUnp() {
        return unp;
    }

    public void setUnp(Long unp) {
        this.unp = unp;
    }

    public TransactionResponseDTO updateAt(OffsetDateTime updateAt) {

        this.updateAt = updateAt;
        return this;
    }

    /**
     * Get updateAt
     *
     * @return updateAt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public OffsetDateTime getUpdateAt() {
        return updateAt;
    }

    public void setUpdateAt(OffsetDateTime updateAt) {
        this.updateAt = updateAt;
    }

    public TransactionResponseDTO userId(Long userId) {

        this.userId = userId;
        return this;
    }

    /**
     * Get userId
     *
     * @return userId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransactionResponseDTO transactionResponseDTO = (TransactionResponseDTO) o;
        return Objects.equals(this.amount, transactionResponseDTO.amount) &&
                Objects.equals(this.bankCode, transactionResponseDTO.bankCode) &&
                Objects.equals(this.creatAt, transactionResponseDTO.creatAt) &&
                Objects.equals(this.email, transactionResponseDTO.email) &&
                Objects.equals(this.purposeOfPayment, transactionResponseDTO.purposeOfPayment) &&
                Objects.equals(this.transactionId, transactionResponseDTO.transactionId) &&
                Objects.equals(this.transactionType, transactionResponseDTO.transactionType) &&
                Objects.equals(this.unp, transactionResponseDTO.unp) &&
                Objects.equals(this.updateAt, transactionResponseDTO.updateAt) &&
                Objects.equals(this.userId, transactionResponseDTO.userId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(amount, bankCode, creatAt, email, purposeOfPayment, transactionId, transactionType, unp, updateAt, userId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransactionResponseDTO {\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
        sb.append("    creatAt: ").append(toIndentedString(creatAt)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    purposeOfPayment: ").append(toIndentedString(purposeOfPayment)).append("\n");
        sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
        sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
        sb.append("    unp: ").append(toIndentedString(unp)).append("\n");
        sb.append("    updateAt: ").append(toIndentedString(updateAt)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets transactionType
     */
    @JsonAdapter(TransactionTypeEnum.Adapter.class)
    public enum TransactionTypeEnum {
        DEPOSIT("DEPOSIT"),

        PAYMENT("PAYMENT"),

        TRANSFER("TRANSFER");

        private String value;

        TransactionTypeEnum(String value) {
            this.value = value;
        }

        public static TransactionTypeEnum fromValue(String value) {
            for (TransactionTypeEnum b : TransactionTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<TransactionTypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final TransactionTypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TransactionTypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TransactionTypeEnum.fromValue(value);
            }
        }
    }

}

