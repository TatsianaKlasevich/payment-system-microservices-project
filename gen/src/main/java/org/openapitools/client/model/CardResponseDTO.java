/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.math.BigDecimal;

import org.threeten.bp.LocalDate;

/**
 * CardResponseDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-03T09:07:33.070383+03:00[Europe/Minsk]")
public class CardResponseDTO {
    public static final String SERIALIZED_NAME_BALANCE = "balance";
    public static final String SERIALIZED_NAME_CARD_ID = "cardId";
    public static final String SERIALIZED_NAME_CARD_NUMBER = "cardNumber";
    public static final String SERIALIZED_NAME_CARD_STATUS = "cardStatus";
    public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
    public static final String SERIALIZED_NAME_IS_DEFAULT = "isDefault";
    public static final String SERIALIZED_NAME_USER_ID = "userId";
    @SerializedName(SERIALIZED_NAME_BALANCE)
    private BigDecimal balance;
    @SerializedName(SERIALIZED_NAME_CARD_ID)
    private Long cardId;
    @SerializedName(SERIALIZED_NAME_CARD_NUMBER)
    private String cardNumber;
    @SerializedName(SERIALIZED_NAME_CARD_STATUS)
    private CardStatusEnum cardStatus;
    @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
    private LocalDate expirationDate;
    @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
    private Boolean isDefault;
    @SerializedName(SERIALIZED_NAME_USER_ID)
    private Long userId;

    public CardResponseDTO balance(BigDecimal balance) {

        this.balance = balance;
        return this;
    }

    /**
     * Get balance
     *
     * @return balance
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public BigDecimal getBalance() {
        return balance;
    }

    public void setBalance(BigDecimal balance) {
        this.balance = balance;
    }

    public CardResponseDTO cardId(Long cardId) {

        this.cardId = cardId;
        return this;
    }

    /**
     * Get cardId
     *
     * @return cardId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getCardId() {
        return cardId;
    }

    public void setCardId(Long cardId) {
        this.cardId = cardId;
    }

    public CardResponseDTO cardNumber(String cardNumber) {

        this.cardNumber = cardNumber;
        return this;
    }

    /**
     * Get cardNumber
     *
     * @return cardNumber
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getCardNumber() {
        return cardNumber;
    }

    public void setCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
    }

    public CardResponseDTO cardStatus(CardStatusEnum cardStatus) {

        this.cardStatus = cardStatus;
        return this;
    }

    /**
     * Get cardStatus
     *
     * @return cardStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public CardStatusEnum getCardStatus() {
        return cardStatus;
    }

    public void setCardStatus(CardStatusEnum cardStatus) {
        this.cardStatus = cardStatus;
    }

    public CardResponseDTO expirationDate(LocalDate expirationDate) {

        this.expirationDate = expirationDate;
        return this;
    }

    /**
     * Get expirationDate
     *
     * @return expirationDate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public LocalDate getExpirationDate() {
        return expirationDate;
    }

    public void setExpirationDate(LocalDate expirationDate) {
        this.expirationDate = expirationDate;
    }

    public CardResponseDTO isDefault(Boolean isDefault) {

        this.isDefault = isDefault;
        return this;
    }

    /**
     * Get isDefault
     *
     * @return isDefault
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getIsDefault() {
        return isDefault;
    }

    public void setIsDefault(Boolean isDefault) {
        this.isDefault = isDefault;
    }

    public CardResponseDTO userId(Long userId) {

        this.userId = userId;
        return this;
    }

    /**
     * Get userId
     *
     * @return userId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CardResponseDTO cardResponseDTO = (CardResponseDTO) o;
        return Objects.equals(this.balance, cardResponseDTO.balance) &&
                Objects.equals(this.cardId, cardResponseDTO.cardId) &&
                Objects.equals(this.cardNumber, cardResponseDTO.cardNumber) &&
                Objects.equals(this.cardStatus, cardResponseDTO.cardStatus) &&
                Objects.equals(this.expirationDate, cardResponseDTO.expirationDate) &&
                Objects.equals(this.isDefault, cardResponseDTO.isDefault) &&
                Objects.equals(this.userId, cardResponseDTO.userId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(balance, cardId, cardNumber, cardStatus, expirationDate, isDefault, userId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CardResponseDTO {\n");
        sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
        sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
        sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
        sb.append("    cardStatus: ").append(toIndentedString(cardStatus)).append("\n");
        sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
        sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets cardStatus
     */
    @JsonAdapter(CardStatusEnum.Adapter.class)
    public enum CardStatusEnum {
        ENABLED("ENABLED"),

        IS_BLOCKED("IS_BLOCKED"),

        IS_CLOSED("IS_CLOSED");

        private String value;

        CardStatusEnum(String value) {
            this.value = value;
        }

        public static CardStatusEnum fromValue(String value) {
            for (CardStatusEnum b : CardStatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<CardStatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final CardStatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public CardStatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return CardStatusEnum.fromValue(value);
            }
        }
    }

}

