/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DepositRequestDTO;
import org.openapitools.client.model.DepositResponseDTO;
import org.openapitools.client.model.PaymentRequestDTO;
import org.openapitools.client.model.PaymentResponseDTO;
import org.openapitools.client.model.TransactionResponseDTO;
import org.openapitools.client.model.TransferRequestDTO;
import org.openapitools.client.model.TransferResponseDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionControllerApi
 */
@Ignore
public class TransactionControllerApiTest {

    private final TransactionControllerApi api = new TransactionControllerApi();


    /**
     * Make deposit
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDepositUsingPOSTTest() throws ApiException {
        DepositRequestDTO depositRequestDTO = null;
        DepositResponseDTO response = api.createDepositUsingPOST(depositRequestDTO);

        // TODO: test validations
    }

    /**
     * Make payment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPaymentUsingPOSTTest() throws ApiException {
        PaymentRequestDTO paymentRequestDTO = null;
        PaymentResponseDTO response = api.createPaymentUsingPOST(paymentRequestDTO);

        // TODO: test validations
    }

    /**
     * Make transfer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTransferUsingPOSTTest() throws ApiException {
        TransferRequestDTO transferRequestDTO = null;
        TransferResponseDTO response = api.createTransferUsingPOST(transferRequestDTO);

        // TODO: test validations
    }

    /**
     * Get all payment transactions by some card id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTransactionsByCardIdUsingGETTest() throws ApiException {
        Long cardId = null;
        List<TransactionResponseDTO> response = api.getAllTransactionsByCardIdUsingGET(cardId);

        // TODO: test validations
    }

    /**
     * Show all payments by some page and sort
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTransactionsUsingGETTest() throws ApiException {
        Long offset = null;
        Boolean paged = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        Boolean sortSorted = null;
        Boolean sortUnsorted = null;
        Boolean unpaged = null;
        List<TransactionResponseDTO> response = api.getAllTransactionsUsingGET(offset, paged, pageNumber, pageSize, sortSorted, sortUnsorted, unpaged);

        // TODO: test validations
    }

}
