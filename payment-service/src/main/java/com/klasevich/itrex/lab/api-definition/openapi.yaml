---
swagger: "2.0"
info:
  description: "Api Documentation"
  version: "1.0"
  title: "Api Documentation"
  termsOfService: "urn:tos"
  contact: { }
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0"
host: "localhost:8082"
tags:
  - name: "card-controller"
    description: "Card Controller"
  - name: "transaction-controller"
    description: "Transaction Controller"
paths:
  /payments/v1/cards/:
    post:
      tags:
        - "card-controller"
      summary: "Create card"
      operationId: "createCardUsingPOST"
      consumes:
        - "application/json"
      produces:
        - "*/*"
      parameters:
        - in: "body"
          name: "cardRequestDTO"
          description: "cardRequestDTO"
          required: true
          schema:
            $ref: "#/definitions/CardRequestDTO"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CardResponseDTO"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/cards/page:
    get:
      tags:
        - "card-controller"
      summary: "Get all cards by some page and sort"
      operationId: "findAllCardsUsingGET"
      produces:
        - "*/*"
      parameters:
        - name: "offset"
          in: "query"
          required: false
          type: "integer"
          format: "int64"
        - name: "paged"
          in: "query"
          required: false
          type: "boolean"
        - name: "pageNumber"
          in: "query"
          required: false
          type: "integer"
          format: "int32"
        - name: "pageSize"
          in: "query"
          required: false
          type: "integer"
          format: "int32"
        - name: "sort.sorted"
          in: "query"
          required: false
          type: "boolean"
        - name: "sort.unsorted"
          in: "query"
          required: false
          type: "boolean"
        - name: "unpaged"
          in: "query"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CardResponseDTO"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/cards/user/{userId}:
    get:
      tags:
        - "card-controller"
      summary: "Get all cards of some user"
      operationId: "getCardsByUserIdUsingGET"
      produces:
        - "*/*"
      parameters:
        - name: "userId"
          in: "path"
          description: "userId"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CardResponseDTO"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/cards/{cardId}:
    get:
      tags:
        - "card-controller"
      summary: "Get card by id"
      operationId: "getCardUsingGET"
      produces:
        - "*/*"
      parameters:
        - name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CardResponseDTO"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
        - "card-controller"
      summary: "Update card"
      operationId: "updateCardUsingPUT"
      consumes:
        - "application/json"
      produces:
        - "*/*"
      parameters:
        - name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "cardRequestDTO"
          description: "cardRequestDTO"
          required: true
          schema:
            $ref: "#/definitions/CardRequestDTO"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CardResponseDTO"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
        - "card-controller"
      summary: "Delete card"
      operationId: "deleteCardUsingDELETE"
      produces:
        - "*/*"
      parameters:
        - name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CardResponseDTO"
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /payments/v1/deposit:
    post:
      tags:
        - "transaction-controller"
      summary: "Make deposit"
      operationId: "createDepositUsingPOST"
      consumes:
        - "application/json"
      produces:
        - "*/*"
      parameters:
        - in: "body"
          name: "depositRequestDTO"
          description: "depositRequestDTO"
          required: true
          schema:
            $ref: "#/definitions/DepositRequestDTO"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/DepositResponseDTO"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/page:
    get:
      tags:
        - "transaction-controller"
      summary: "Show all payments by some page and sort"
      operationId: "getAllTransactionsUsingGET"
      produces:
        - "*/*"
      parameters:
        - name: "offset"
          in: "query"
          required: false
          type: "integer"
          format: "int64"
        - name: "paged"
          in: "query"
          required: false
          type: "boolean"
        - name: "pageNumber"
          in: "query"
          required: false
          type: "integer"
          format: "int32"
        - name: "pageSize"
          in: "query"
          required: false
          type: "integer"
          format: "int32"
        - name: "sort.sorted"
          in: "query"
          required: false
          type: "boolean"
        - name: "sort.unsorted"
          in: "query"
          required: false
          type: "boolean"
        - name: "unpaged"
          in: "query"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionResponseDTO"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/payment:
    post:
      tags:
        - "transaction-controller"
      summary: "Make payment"
      operationId: "createPaymentUsingPOST"
      consumes:
        - "application/json"
      produces:
        - "*/*"
      parameters:
        - in: "body"
          name: "paymentRequestDTO"
          description: "paymentRequestDTO"
          required: true
          schema:
            $ref: "#/definitions/PaymentRequestDTO"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentResponseDTO"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/transfer:
    post:
      tags:
        - "transaction-controller"
      summary: "Make transfer"
      operationId: "createTransferUsingPOST"
      consumes:
        - "application/json"
      produces:
        - "*/*"
      parameters:
        - in: "body"
          name: "transferRequestDTO"
          description: "transferRequestDTO"
          required: true
          schema:
            $ref: "#/definitions/TransferRequestDTO"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/TransferResponseDTO"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /payments/v1/{cardId}:
    get:
      tags:
        - "transaction-controller"
      summary: "Get all payment transactions by some card id"
      operationId: "getAllTransactionsByCardIdUsingGET"
      produces:
        - "*/*"
      parameters:
        - name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionResponseDTO"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
definitions:
  CardRequestDTO:
    type: "object"
    properties:
      balance:
        type: "number"
      cardNumber:
        type: "string"
        pattern: "\\d{16}"
      cardStatus:
        type: "string"
        minLength: 3
        maxLength: 15
        enum:
          - "ENABLED"
          - "IS_BLOCKED"
          - "IS_CLOSED"
      expirationDate:
        type: "string"
        format: "date"
      isDefault:
        type: "boolean"
      userId:
        type: "integer"
        format: "int64"
    title: "CardRequestDTO"
  CardResponseDTO:
    type: "object"
    properties:
      balance:
        type: "number"
      cardId:
        type: "integer"
        format: "int64"
      cardNumber:
        type: "string"
      cardStatus:
        type: "string"
        enum:
          - "ENABLED"
          - "IS_BLOCKED"
          - "IS_CLOSED"
      expirationDate:
        type: "string"
        format: "date"
      isDefault:
        type: "boolean"
      userId:
        type: "integer"
        format: "int64"
    title: "CardResponseDTO"
  DepositRequestDTO:
    type: "object"
    properties:
      amount:
        type: "number"
      cardId:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
    title: "DepositRequestDTO"
  DepositResponseDTO:
    type: "object"
    properties:
      balance:
        type: "number"
      mail:
        type: "string"
    title: "DepositResponseDTO"
  PaymentRequestDTO:
    type: "object"
    properties:
      amount:
        type: "number"
      bankCode:
        type: "string"
        minLength: 28
        maxLength: 28
      cardId:
        type: "integer"
        format: "int64"
      purposeOfPayment:
        type: "string"
        minLength: 2
        maxLength: 125
      unp:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
    title: "PaymentRequestDTO"
  PaymentResponseDTO:
    type: "object"
    properties:
      balance:
        type: "number"
      bankCode:
        type: "string"
      mail:
        type: "string"
      purposeOfPayment:
        type: "string"
      unp:
        type: "integer"
        format: "int64"
    title: "PaymentResponseDTO"
  TransactionResponseDTO:
    type: "object"
    properties:
      amount:
        type: "number"
      bankCode:
        type: "string"
      creatAt:
        type: "string"
        format: "date-time"
      email:
        type: "string"
      purposeOfPayment:
        type: "string"
      transactionId:
        type: "integer"
        format: "int64"
      transactionType:
        type: "string"
        enum:
          - "DEPOSIT"
          - "PAYMENT"
          - "TRANSFER"
      unp:
        type: "integer"
        format: "int64"
      updateAt:
        type: "string"
        format: "date-time"
      userId:
        type: "integer"
        format: "int64"
    title: "TransactionResponseDTO"
  TransferRequestDTO:
    type: "object"
    properties:
      amount:
        type: "number"
      cardId:
        type: "integer"
        format: "int64"
      recipientCardId:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
    title: "TransferRequestDTO"
  TransferResponseDTO:
    type: "object"
    properties:
      balance:
        type: "number"
      mail:
        type: "string"
      recipientCardId:
        type: "integer"
        format: "int64"
    title: "TransferResponseDTO"


